name: CIPOI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    paths:
      - 'apis/poi/**'
      - '.github/workflows/CIPOI.yml'

defaults:
  run:
    working-directory: "apis/poi"

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 3.1.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore
      
    - name: Unit Test
      run: dotnet test --filter "FullyQualifiedName~UnitTest" --logger "trx;LogFileName=UnitTestResults.trx" --results-directory ./TestResults
      
    - name: create an issue
      if: failure()||success()
      run: |
         body='### Unit Test `failure`
         <details>
         <summary>Workflow details</summary>
         Workflow name: `${{ github.workflow }}`
         Action: `${{ github.event_name }}`
         Job: `${{ github.job }}`
         PR: #${{ github.event.number }}
         </details>
         Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
         Pusher: @${{ github.actor }}'
         gh issue create --title ${{ github.event_name }} --body "${body}" --assignee ${{ github.actor }}
      env:
       GITHUB_TOKEN: ${{ secrets.GH_SECRET }}

    - name: create PR comment
      if: failure()||success()
      run: |
         body='### Unit Test `failure`
         <details>
         <summary>Workflow details</summary>
         Workflow name: `${{ github.workflow }}`
         Action: `${{ github.event_name }}`
         Job: `${{ github.job }}`
         PR: #${{ github.event.number }}
         </details>
         Test details: [Run #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
         Pusher: @${{ github.actor }}'
         gh pr comment ${{ github.event.number }} --body "${body}" 
      env:
       GITHUB_TOKEN: ${{ secrets.GH_SECRET }}

  # GitLeaks
  
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: "0"

    - name: Run Gitleaks
      id: gitleaks
      uses: DariuszPorowski/github-action-gitleaks@v2
      with:
        config: "MyGitleaksConfig.toml"

    - name: Upload Gitleaks JSON report to artifacts
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: gitleaks
        path: ${{ steps.gitleaks.outputs.report }}

